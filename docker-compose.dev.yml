services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    environment:
      - DB_HOST_TYPE=docker # Use dockerized db for development
    volumes:
      - ./server:/app  # Mounts local backend folder for development
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - ./server/.env
    networks:
      - app-network
    restart: unless-stopped

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    volumes:
      - ./client:/app
      # Exclude specific folders from being mounted
      - /app/node_modules
      - /app/.react-router
      - /app/.vite
      - /app/dist
    ports:
      - "5173:5173"
    # command: npm run dev
    env_file:
      - ./client/.env
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    env_file:
      - ./server/.env
    # environment:
    #   - POSTGRES_DB=${POSTGRES_DB}
    #   - POSTGRES_USER=${POSTGRES_USER}
    #   - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #   - POSTGRES_HOST=${POSTGRES_HOST}
    #   - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - server
      - client
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: